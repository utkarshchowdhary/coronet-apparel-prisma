type Query {
  collections: [Collection!]!
  collection(id: ID!): Collection!
  getCollectionsByTitle(title: String!): Collection!
  items: [Item!]!
  item(id: ID!): Item!
}

type Mutation {
  createCollection(data: CreateCollectionInput!): Collection!
  deleteCollection(id: ID!): Collection!
  updateCollection(id: ID!, data: UpdateCollectionInput): Collection!
  createItem(data: CreateItemInput!): Item!
  deleteItem(id: ID!): Item!
  updateItem(id: ID!, data: UpdateItemInput): Item!
}

input CreateCollectionInput {
  title: String!
  coverImage: String!
}

input UpdateCollectionInput {
  title: String
  coverImage: String
}

input CreateItemInput {
  name: String!
  imageUrl: String!
  price: Float!
  collection: ID!
}

input UpdateItemInput {
  name: String
  imageUrl: String
  price: Float
}

type Collection {
  id: ID!
  title: String!
  coverImage: String!
  createdAt: String!
  updatedAt: String!
  items: [Item!]!
}

type Item {
  id: ID!
  name: String!
  imageUrl: String!
  price: Float!
  createdAt: String!
  updatedAt: String!
  collection: Collection!
}
